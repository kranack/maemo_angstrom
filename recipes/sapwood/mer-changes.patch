--- sapwood-3.1.1-2+0m5/debian/control
+++ sapwood-3.1.1-2+0m5/debian/control
@@ -3,7 +3,7 @@
 Priority: optional
 Maintainer: Tommi Komulainen <tommi.komulainen@nokia.com>
 Standards-Version: 3.6.0
-Build-Depends: debhelper (>> 4.0.0), libgtk2.0-dev (>= 2.8.0), upstart-dev
+Build-Depends: debhelper (>> 4.0.0), libgtk2.0-dev (>= 2.8.0), upstart-dev, automake, autoconf, libtool
 
 Package: gtk2-engines-sapwood
 Architecture: any
--- sapwood-3.1.1-2+0m5/debian/changelog
+++ sapwood-3.1.1-2+0m5/debian/changelog
@@ -1,3 +1,10 @@
+sapwood (3.1.1-2+0m5-mer1) jaunty; urgency=low
+
+  * Add automake, libtool, autoconf to build-dep
+  * Fix bad alignment on < ARMv6, causing crashes on 770 (thanks to RST38h)
+
+ -- Carsten V. Munk <cvm@cs.au.dk>  Thu, 21 May 2009 19:58:41 +0000
+
 sapwood (3.1.1-2+0m5) unstable; urgency=low
 
   * This entry has been added by BIFH queue processor
--- sapwood-3.1.1-2+0m5/engine/sapwood-pixmap.c
+++ sapwood-3.1.1-2+0m5/engine/sapwood-pixmap.c
@@ -91,14 +91,19 @@
                              GError    **err)
 {
   SapwoodPixmap     *self;
-  char               buf[ sizeof(PixbufOpenRequest) + PATH_MAX + 1 ] = {0};
-  PixbufOpenRequest *req = (PixbufOpenRequest *) buf;
   PixbufOpenResponse rep;
   int                flen;
   int                i, j;
+  struct
+  {
+    PixbufOpenRequest request;
+    char namebuf[PATH_MAX+1];
+  } req;
 
+  memset(&req, 0, sizeof(req));
+      
   /* marshal request */
-  flen = g_strlcpy (req->filename, filename, PATH_MAX);
+  flen = g_strlcpy (req.request.filename, filename, PATH_MAX);
   if (flen > PATH_MAX)
     {
       g_set_error (err, SAPWOOD_CLIENT_ERROR, SAPWOOD_CLIENT_ERROR_UNKNOWN,
@@ -106,14 +111,14 @@
       return NULL;
     }
 
-  req->base.op       = PIXBUF_OP_OPEN;
-  req->base.length   = sizeof(*req) + flen + 1;
-  req->border_left   = border_left;
-  req->border_right  = border_right;
-  req->border_top    = border_top;
-  req->border_bottom = border_bottom;
+  req.request.base.op       = PIXBUF_OP_OPEN;
+  req.request.base.length   = sizeof(PixbufOpenRequest) + flen + 1;
+  req.request.border_left   = border_left;
+  req.request.border_right  = border_right;
+  req.request.border_top    = border_top;
+  req.request.border_bottom = border_bottom;
 
-  if (!pixbuf_proto_request ((char*)req,  req->base.length,
+  if (!pixbuf_proto_request ((char*)&req,  req.request.base.length,
 			     (char*)&rep, sizeof(rep), err))
     return NULL;
 
